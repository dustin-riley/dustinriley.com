---
import {
  getCollection,
  type CollectionEntry,
  type CollectionKey,
} from "astro:content";

type PageData = {
  title: string;
  meta_title?: string;
  description?: string;
  image?: string;
  draft?: boolean;
};

export const getSinglePage = async <C extends CollectionKey>(
  collectionName: C
): Promise<CollectionEntry<C>[]> => {
  const allPages = await getCollection(collectionName);

  const removeIndex = allPages.filter((data) => data.id.match(/^(?!-)/));

  const removeDrafts = removeIndex.filter((data) => {
    const pageData = data.data as PageData;
    return pageData.draft !== true;
  });

  // Strip .md and .mdx extensions from id for clean URLs
  const cleanedPages = removeDrafts.map((page) => ({
    ...page,
    id: page.id.replace(/\.(md|mdx)$/, ""),
  }));

  return cleanedPages;
};
---
